# Spring Boot REST API path:
spring.data.rest.base-path=/db

#production
#spring.datasource.data=classpath:data.sql

#Development
spring.datasource.data=classpath:import.sql

# The SQL dialect makes Hibernate generate better SQL for the chosen database:
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Avoid warning message log with application start:
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# JPA Time Zone Setting:
spring.jpa.properties.hibernate.jdbc.time_zone=CET

# Spring Boot PostgreSQL Database connection settings:
#spring.datasource.url=jdbc:postgresql://JordyNAS:5432/postgres
spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.username=postgres
spring.datasource.password=root13

# Database (create) tables || (update) tables settings:
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always

# JPA OSIV (Open Session In View) settings:
spring.jpa.open-in-view=false

# JWT Properties Secret Key:
codenetwork.app.jwtSecret=jordymindSecretKey
# JWT Token expiration after 24 hours:
codenetwork.app.jwtExpirationMs=86400000

# Hibernate Debug Mode
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE


## MULTIPART (MultipartProperties)

# Set Maximum File Size:
spring.servlet.multipart.max-file-size=10MB
# Set Maximum Request Size:
spring.servlet.multipart.max-request-size=50MB

# Enable Multipart Uploads:
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk:
spring.servlet.multipart.file-size-threshold=2KB
# Resolve Multipart file(s) Lazily:
spring.servlet.multipart.resolve-lazily=false

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=/api/files

## QuartzProperties check http://www.quartz-scheduler.org/
#org.quartz.jobStore.dataSource=quartzDataSource
spring.quartz.properties.org.quartz.threadPool.threadCount = 5


# Email is set to false, when you fill in the correct credentials .then set all to true and open all ports
######ALL Email Properties ######
## MailProperties
#spring.mail.transport.protocol=smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587

# Email Account information
spring.mail.from.email=
spring.mail.username=
spring.mail.password=


spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.ssl.enable = false

spring.mail.test-connection=true
# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=false

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

## MAIL
## set character encoding
spring.mail.default-encoding=UTF-8
